//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Laclasse.Authentication {
    using System.Linq;
    using System.Text;
    using Web=System.Web;
    using System.Collections.Generic;
    using Erasme.Http;
    using System;
    
    
    public partial class CasView : CasViewBase {
        
        public virtual string TransformText() {
            this.GenerationEnvironment = null;
            
            #line 1 ""
            this.Write("﻿");
            
            #line default
            #line hidden
            
            #line 8 ""
            this.Write("<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<title>Service d\'Authentification Central de lac" +
                    "lasse.com</title>\n\t\t\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset" +
                    "=utf-8\"/>\n\t\t\t<meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\n\t\t\t<meta n" +
                    "ame=\"mobile-web-app-capable\" content=\"yes\">\n\t\t\t<meta http-equiv=\"Content-Type\" c" +
                    "ontent=\"text/html; charset=utf-8\">\n\t\t\t<meta name=\"viewport\" content=\"width=devic" +
                    "e-width, initial-scale=1.0, minimum-scale=1.0\">\n            <meta name=\"theme-co" +
                    "lor\" content=\"#dedede\" />\n            <link rel=\"icon\" href=\"images/icon-64.png\"" +
                    " sizes=\"64x64\" />\n            <link rel=\"icon\" href=\"images/icon-128.png\" sizes=" +
                    "\"128x128\" />\n            <link rel=\"icon\" href=\"images/icon-256.png\" sizes=\"256x" +
                    "256\" />\n            <link rel=\"apple-touch-icon\" href=\"images/icon-72.png\" sizes" +
                    "=\"72x72\" />\n            <link rel=\"apple-touch-icon\" href=\"images/icon-114.png\" " +
                    "sizes=\"114x114\" />\n            <link rel=\"manifest\" href=\"manifest.json\" />\n    " +
                    "        <link rel=\"stylesheet\" href=\"/portail/fonts/muli.css\" />\n\t\t\t<style>\nbody" +
                    " {\n\tcolor: #444;\n\tbackground-color: #f5f5f5;\n\tfont-family: \"Muli\", sans-serif;\n\t" +
                    "font-size: 16px;\n\tline-height: 1.3;\n    margin: 0px;\n    padding: 0px;\n}\n\n* {\n\tb" +
                    "ox-sizing: border-box;\n}\n\na {\n\tcolor: #444;\n}\n\nimg {\n    border: none;\n}\n\nli {\n\t" +
                    "padding-top: 5px;\n    padding-bottom: 5px;\n}\n\n.logo {\n\twidth: 60%;\n\topacity: 0.6" +
                    ";\n\tposition: absolute;\n\tleft: -5%;\n\ttop: -15%;\n\t-webkit-user-select: none;\n}\n\n.f" +
                    "ooter {\n\twidth: 100%;\n    max-width: 1000px;\n\tdisplay: block;\n    padding: 0px;\n" +
                    "\ttext-align: left;\n    margin-bottom: 40px;\n    margin-top: 10px;\n    position: " +
                    "relative;\n    top: 0px;\n}\n\n.btn {\n    -webkit-appearance: none;\n\tdisplay: inline" +
                    "-block;\n\tfont-size: 14px;\n\ttext-transform: uppercase;\n\tpadding: 10px 20px;\n\tbord" +
                    "er: 0px solid white;\n\tborder-radius: 0;\n\tbackground-color: #444;\n\tmargin: 5px;\n " +
                    "   color: white;\n\ttext-decoration: none;\n\tcursor: pointer;\n\ttext-align: center;\n" +
                    "}\n\n.btn:hover {\n\tbackground-color: #555;\n}\n\n.box {\n    background: #f2efef;\n    " +
                    "padding: 30px;\n}\n\n.boxHeader {\n    font-size: 20px;\n    text-align: center;\n    " +
                    "margin-bottom: 10px;\n    color: #444;\n    font-weight: bold;\n}\n\ninput[type=text]" +
                    ", input[type=password] {\n    -webkit-appearance: none;\n    width: calc(100% - 10" +
                    "px);\n    height: 30px;\n    border: 1px solid #cccccc;\n    background-color: #f7f" +
                    "7f7;\n    margin: 5px;\n    color: #444;\n    font-size: 18px;\n    padding-left: 10" +
                    "px;\n    padding-right: 10px;\n    border-radius: 0;\n}\n\ninput:-webkit-autofill {\n " +
                    "   -webkit-box-shadow: 0 0 0 30px #f9f194 inset;\n}\n\n.title {\n    font-weight: bo" +
                    "ld;\n    font-size: 18px;\n    margin-bottom: 20px;\n}\n\n.authBox {\n    display: fle" +
                    "x;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    justify-content: stretch;" +
                    "\n    margin-bottom: 20px;\n}\n\n.authSeparator {\n    position: absolute;\n    left: " +
                    "calc(50% - 1px);\n    top: 0px;\n    width: 2px;\n    height: 100%;\n    background-" +
                    "color: #444;\n}\n\n.authOr {\n    width: 30px;\n    height: 20px; \n    text-align: ce" +
                    "nter;\n    position: absolute;\n    left: calc(50% - 15px);\n    top: calc(50% - 10" +
                    "px);\n    background-color: #f2efef;\n    font-weight: bold;\n}\n\n@media screen and " +
                    "(max-width: 600px) {\n    .authBox {\n        display: block;\n        flex-directi" +
                    "on: column;\n    }\n\n    .authSeparator {\n        left: 0px;\n        top: calc(50%" +
                    " - 1px);\n        width: 100%;\n        height: 2px;\n    }\n}\n\n.checkbox {\n    user" +
                    "-select: none;\n    margin: 5px;\n}\n\n.checkbox div {\n    border: 2px solid #444;\n " +
                    "   border-radius: 4px;\n}\n\n.checkbox input {\n    width: 0px;\n    height: 0px;\n   " +
                    " opacity: 0;\n}\n\n.checkbox svg {\n    opacity: 0;\n}\n\n.checkbox input:checked ~ div" +
                    " {\n    background: #444;\n}\n\n.checkbox input:checked ~ div > svg {\n    fill: #fff" +
                    "fff;\n    opacity: 1;\n}\n\n\t\t</style>\n\t\t<script>\nfunction onRescue()\n{\n\tvar errorCo" +
                    "ntent = document.getElementById(\"error-content\");\n\tif (errorContent != null)\n\t\te" +
                    "rrorContent.style.display = \"none\";\n\tdocument.getElementById(\"authentication-con" +
                    "tent\").style.display = \"none\";\n\tdocument.getElementById(\"rescue-content\").style." +
                    "display = \"inherit\";\n}\n\nfunction onContact() {\n\tvar contactContent = document.ge" +
                    "tElementById(\"contact-content\");\n\tif (contactContent != null)\n\t\tcontactContent.s" +
                    "tyle.display = \"none\";\n\tdocument.getElementById(\"authentication-content\").style." +
                    "display = \"none\";\n\tdocument.getElementById(\"contact-content\").style.display = \"i" +
                    "nherit\";\n}\n\nfunction onRescueBack(e)\n{\n\tdocument.getElementById(\"authentication-" +
                    "content\").style.display = \"inherit\";\n\tdocument.getElementById(\"rescue-content\")." +
                    "style.display = \"none\";\n}\n\nfunction onContactBack(e) {\n\tdocument.getElementById(" +
                    "\"authentication-content\").style.display = \"inherit\";\n\tdocument.getElementById(\"c" +
                    "ontact-content\").style.display = \"none\";\n}\n\t\t</script>\n\t</head>\n<body>\n         " +
                    "   <div style=\"width: 100%; height: 10px; background-color: #e10000; margin: 0px" +
                    "; position: relative; top: 0px; z-index: 2;\"></div>\n\t\t\t<img draggable=\"false\" cl" +
                    "ass=\"logo\" src=\"images/logolaclasse.svg\" alt=\"Logo ENT\">\n\t\t\t<div style=\"position" +
                    ": absolute; top: 20px; left: 0px; right: 0px; bottom: 0px;\">\n\t\t\t<center>\n\t\t\t\t<di" +
                    "v style=\"max-width: 1000px;\">\n                    <div style=\"display: flex; fle" +
                    "x-direction: row; flex-wrap: wrap; padding: 20px; padding-bottom: 5px;\">\n       " +
                    "                 <div style=\"font-weight: bold; font-size: 40px; flex-grow: 1; t" +
                    "ext-align: left;\"><span style=\"color: #da0100\">la</span>classe<span style=\"color" +
                    ": #da0100\">.</span>com</div>\n                        <a href=\"http://www.ac-lyon" +
                    ".fr/\" style=\"margin-right: 20px;\"><img draggable=\"false\" style=\"width: 91px; hei" +
                    "ght: 46px\" src=\"images/logo-academie3.svg\" alt=\"Logo Académie de Lyon\" /></a>\n  " +
                    "                      <a href=\"https://www.grandlyon.com/\"><img draggable=\"false" +
                    "\" style=\"width: 200px; height: 46px;\" src=\"images/grandlyon-logo.svg\" alt=\"Logo " +
                    "Métropole du Grand Lyon\"></a>\n                    </div>\n                    \n  " +
                    "                  <div style=\"text-align: left; padding: 5px; padding-top: 0px; " +
                    "padding-left: 20px; margin-bottom: 30px; font-size: 16px; font-weight: bold; col" +
                    "or: #444; border-top-left-radius: 10px; border-top-right-radius: 10px;\">\n       " +
                    "                 Espace Numérique de Travail des collèges et écoles de la Métrop" +
                    "ole de Lyon\n                    </div>\n                    \n                    " +
                    "");
            
            #line default
            #line hidden
            
            #line 249 ""
 if (error != null) { 
            
            #line default
            #line hidden
            
            #line 250 ""
            this.Write(@"
                    <div style=""display: flex; flex-direction: row; padding: 20px; margin-bottom: 20px; background-color: #f3eff0;"" id=""error-content"">
                        <svg xmlns=""http://www.w3.org/2000/svg"" width=""36"" height=""36"" viewBox=""0 0 48 48"" version=""1.1"" style=""fill: #e10000; align-self: center;"">
                            <path d=""m 22,14 v 12 h 4 V 14 Z m 0,16 v 4 h 4 v -4 z""/>
                            <path d=""M24 4C13 4 4 13 4 24 4 35 13 44 24 44c11 0 20-9 20-20 0-11-9-20-20-20zm0 4c9 0 16 7 16 16 0 9-7 16-16 16-9 0-16-7-16-16 0-9 7-16 16-16z"" />
                        </svg>
                        <div style=""margin-left: 20px; align-self: center; color: #da0000; font-weight: bold; font-size: 18px;"">
                            <div>
                                ");
            
            #line default
            #line hidden
            
            #line 258 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( error ));
            
            #line default
            #line hidden
            
            #line 258 ""
            this.Write("\n                            </div>\n                        </div>\n              " +
                    "      </div>\n                    ");
            
            #line default
            #line hidden
            
            #line 262 ""
 } 
            
            #line default
            #line hidden
            
            #line 263 ""
            this.Write("\n                    ");
            
            #line default
            #line hidden
            
            #line 264 ""
 if (info != null) { 
            
            #line default
            #line hidden
            
            #line 265 ""
            this.Write(@"
                    <div style=""display: flex; flex-direction: row; padding: 20px; margin-bottom: 20px; background-color: #f3eff0;"" id=""info-content"">
                        <svg xmlns=""http://www.w3.org/2000/svg"" width=""36"" height=""36"" viewBox=""0 0 48 48"" version=""1.1"" style=""fill: #4F891F; align-self: center;"">
                            <path d=""m 26,34 0,-12 h -4 l 0,12 z m 0,-16 v -4 h -4 v 4 z"" />
                            <path d=""M24 4C13 4 4 13 4 24 4 35 13 44 24 44c11 0 20-9 20-20 0-11-9-20-20-20zm0 4c9 0 16 7 16 16 0 9-7 16-16 16-9 0-16-7-16-16 0-9 7-16 16-16z"" />
                        </svg>
                        <div style=""margin-left: 20px; align-self: center; color: #628e4e; font-size: 18px;"">
                            <div>
                                ");
            
            #line default
            #line hidden
            
            #line 273 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( info ));
            
            #line default
            #line hidden
            
            #line 273 ""
            this.Write("\n                            </div>\n                        </div>\n              " +
                    "      </div>\n                    ");
            
            #line default
            #line hidden
            
            #line 277 ""
 } 
            
            #line default
            #line hidden
            
            #line 278 ""
            this.Write("                    \n\t\t\t\t\t<div class=\"box\" style=\"width: 100%; text-align: left;\"" +
                    ">\n\t\t\t\t\t\t");
            
            #line default
            #line hidden
            
            #line 280 ""
 if (message != null) { 
            
            #line default
            #line hidden
            
            #line 281 ""
            this.Write("\n\t\t\t\t\t\t<div style=\"margin-bottom: 20px;\">\n\t\t\t\t\t\t\t<div class=\"title\">");
            
            #line default
            #line hidden
            
            #line 283 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( title ));
            
            #line default
            #line hidden
            
            #line 283 ""
            this.Write("</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t");
            
            #line default
            #line hidden
            
            #line 285 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( message ));
            
            #line default
            #line hidden
            
            #line 285 ""
            this.Write("\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<a class=\"btn\" href=\"logout\">SE DÉCONNECTER</a>\n\t\t\t\t\t\t</div" +
                    ">\n\n\t\t\t\t\t\t");
            
            #line default
            #line hidden
            
            #line 290 ""

						}
						else
						{
							if (rescueUsers != null) { 
            
            #line default
            #line hidden
            
            #line 295 ""
            this.Write(@"
						<div id=""rescue-content"">
							<div class=""boxHeader"">
								<a href=""#back"" onclick=""onRescueBack()"" style=""float: left;"">
									<svg xmlns=""http://www.w3.org/2000/svg"" width=""28"" height=""28"" viewBox=""0 0 48 48"">
										<path style=""fill:#444444;fill-opacity:1;stroke:none"" d=""M40 22H15.86l11.18-11.18L24 8l-16 16 16 16 2.82-2.82L15.66 26H40v-4z""/>
									</svg>
								</a> Mot de passe oublié
							</div>

							<div style=""margin-bottom: 20px;"">
								<div class=""title"">Choisissez l'utilisateur pour lequel vous avez perdu le mot de passe</div>

								<form method=""post"" action=""login"">
		    	        			<input type=""hidden"" name=""service"" value=""");
            
            #line default
            #line hidden
            
            #line 309 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( Web.HttpUtility.HtmlEncode(service) ));
            
            #line default
            #line hidden
            
            #line 309 ""
            this.Write("\">\n\t\t    \t        \t\t\t<input type=\"hidden\" name=\"ticket\" value=\"");
            
            #line default
            #line hidden
            
            #line 310 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( ticket ));
            
            #line default
            #line hidden
            
            #line 310 ""
            this.Write("\">\n\t\t    \t        \t\t\t<input type=\"hidden\" name=\"state\" value=\"");
            
            #line default
            #line hidden
            
            #line 311 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( state ));
            
            #line default
            #line hidden
            
            #line 311 ""
            this.Write("\">\n\t\t    \t        \t\t\t<input type=\"hidden\" name=\"rescue\" value=\"");
            
            #line default
            #line hidden
            
            #line 312 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( rescue ));
            
            #line default
            #line hidden
            
            #line 312 ""
            this.Write("\">\n\t\t    \t        \t\t\t");
            
            #line default
            #line hidden
            
            #line 313 ""
 var first = "checked"; foreach (var user in rescueUsers) { 
            
            #line default
            #line hidden
            
            #line 314 ""
            this.Write("\t\t    \t        \t\t\t<input type=\"radio\" name=\"user\" value=\"");
            
            #line default
            #line hidden
            
            #line 314 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( user.id ));
            
            #line default
            #line hidden
            
            #line 314 ""
            this.Write("\" ");
            
            #line default
            #line hidden
            
            #line 314 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( first ));
            
            #line default
            #line hidden
            
            #line 314 ""
            this.Write(">");
            
            #line default
            #line hidden
            
            #line 314 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( user.firstname + " " + user.lastname ));
            
            #line default
            #line hidden
            
            #line 314 ""
            this.Write("</input><br>\n\t\t\t\t\t\t\t\t\t");
            
            #line default
            #line hidden
            
            #line 315 ""
 first = ""; } 
            
            #line default
            #line hidden
            
            #line 316 ""
            this.Write("\t\t\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t\t\t<input class=\"btn\" name=\"submit\" type=\"submit\" value=\"VALI" +
                    "DER\">\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t");
            
            #line default
            #line hidden
            
            #line 322 ""
 	} else if (rescueId != null) { 
            
            #line default
            #line hidden
            
            #line 323 ""
            this.Write(@"
						<div id=""rescue-content"">
							<div class=""boxHeader"">
								<a href=""#back"" onclick=""onRescueBack()"" style=""float: left;"">
									<svg xmlns=""http://www.w3.org/2000/svg"" width=""28"" height=""28"" viewBox=""0 0 48 48"">
										<path style=""fill:#444444;fill-opacity:1;stroke:none"" d=""M40 22H15.86l11.18-11.18L24 8l-16 16 16 16 2.82-2.82L15.66 26H40v-4z""/>
									</svg>
								</a> Mot de passe oublié
							</div>

							<div style=""margin-bottom: 20px;"">
								<div>
									Un code vient de vous être envoyé à <b>");
            
            #line default
            #line hidden
            
            #line 335 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( rescue ));
            
            #line default
            #line hidden
            
            #line 335 ""
            this.Write("</b>. Merci de le saisir dans\n\t\t\t\t\t\t\t\t\tle champ ci-dessous. Cela vous permettra d" +
                    "e vous connecter sur le compte\n\t\t\t\t\t\t\t\t\tde ");
            
            #line default
            #line hidden
            
            #line 337 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( rescueUser ));
            
            #line default
            #line hidden
            
            #line 337 ""
            this.Write(". Une fois connecté, pensez bien à changer le mot de passe.\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t" +
                    "\t\t<br>\n\t\t\t\t\t\t\t\t<form method=\"post\" action=\"login\">\n\t\t    \t        \t\t\t<input type" +
                    "=\"hidden\" name=\"service\" value=\"");
            
            #line default
            #line hidden
            
            #line 341 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( Web.HttpUtility.HtmlEncode(service) ));
            
            #line default
            #line hidden
            
            #line 341 ""
            this.Write("\">\n\t\t    \t        \t\t\t<input type=\"hidden\" name=\"ticket\" value=\"");
            
            #line default
            #line hidden
            
            #line 342 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( ticket ));
            
            #line default
            #line hidden
            
            #line 342 ""
            this.Write("\">\n\t\t    \t        \t\t\t<input type=\"hidden\" name=\"state\" value=\"");
            
            #line default
            #line hidden
            
            #line 343 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( state ));
            
            #line default
            #line hidden
            
            #line 343 ""
            this.Write("\">\n\t\t    \t        \t\t\t<input type=\"hidden\" name=\"rescue\" value=\"");
            
            #line default
            #line hidden
            
            #line 344 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( rescue ));
            
            #line default
            #line hidden
            
            #line 344 ""
            this.Write("\">\n\t\t    \t        \t\t\t<input type=\"hidden\" name=\"rescueId\" value=\"");
            
            #line default
            #line hidden
            
            #line 345 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( rescueId ));
            
            #line default
            #line hidden
            
            #line 345 ""
            this.Write("\">\n\t\t    \t        \t\t\t<div>Code:</div>\n\t\t    \t        \t\t\t<input type=\"text\" name=\"" +
                    "rescueCode\" value=\"\">\n\t\t\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t\t\t<input class=\"btn\" name=\"submit\" ty" +
                    "pe=\"submit\" value=\"VALIDER\">\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t");
            
            #line default
            #line hidden
            
            #line 354 ""
 	} 
            
            #line default
            #line hidden
            
            #line 355 ""
            this.Write("\n\t\t\t\t\t\t<!-- authentication -->\n\t\t\t\t\t\t<div style=\"display: ");
            
            #line default
            #line hidden
            
            #line 357 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( (rescue != null) ? "none" : "inherit" ));
            
            #line default
            #line hidden
            
            #line 357 ""
            this.Write(@""" id=""authentication-content"">
							<div class=""boxHeader"">Connectez-vous</div>

                            <div class=""authBox"">
    							<div style=""margin-bottom: 0px; flex: 1; display: flex; flex-direction: column;"">
    								<div class=""title"" style=""position: relative; top: -8px"">avec un compte partenaire : 
                                        <a href=""https://ent-laclasse.blogs.laclasse.com/"" target=""_blank"">
                                            <svg xmlns=""http://www.w3.org/2000/svg"" viewBox=""0 0 48 48"" version=""1.1"" style=""fill: #0074c1; position: relative; top: 8px; width: 28px; height: 28px; margin-left: 10px"">
                                                <path d=""M24 4C6.2 4-2.7 25.5 9.9 38.1 22.5 50.7 44 41.8 44 24 44 13 35 4 24 4zM23.5 8C31.9 7.8 40 14.2 40 24 40 32.8 32.8 40 24 40 9.7 40 2.6 22.8 12.7 12.7 15.8 9.5 19.7 8.1 23.5 8zM24 12C19.6 12 16 15.6 16 20L20 20C20 14.7 28 14.7 28 20 28 24 22 23.5 22 30L26 30C26 25.5 32 25 32 20 32 15.6 28.4 12 24 12zM24 32.2A2.9 2.9 0 0 0 21.1 35.1 2.9 2.9 0 0 0 24 38 2.9 2.9 0 0 0 26.9 35.1 2.9 2.9 0 0 0 24 32.2z"" />
                                            </svg>
                                        </a>
                                    </div>
                                    <a class=""btn"" style=""padding: 6px; padding-left: 10px; background-color: #9b0383; display: flex; flex-direction: row;"" href=""parentPortalIdp?service=");
            
            #line default
            #line hidden
            
            #line 369 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( HttpUtility.UrlEncode(service) ));
            
            #line default
            #line hidden
            
            #line 369 ""
            this.Write("&state=");
            
            #line default
            #line hidden
            
            #line 369 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( HttpUtility.UrlEncode(state) ));
            
            #line default
            #line hidden
            
            #line 369 ""
            this.Write(@""">
                                        <img src=""images/education-nationale.svg"" style=""width: 24px; height: 24px; align-self: center;"">
                                        <div style=""flex-grow: 1; margin-left: 10px; text-align: center; align-self: center;"">Éducation Nationale Parents/Élèves</div>
                                    </a>
                                    <a class=""btn"" style=""padding: 6px; padding-left: 10px; background-color: #05a9cc; display: flex; flex-direction: row;"" href=""agentPortalIdp?service=");
            
            #line default
            #line hidden
            
            #line 373 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( HttpUtility.UrlEncode(service) ));
            
            #line default
            #line hidden
            
            #line 373 ""
            this.Write("&state=");
            
            #line default
            #line hidden
            
            #line 373 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( HttpUtility.UrlEncode(state) ));
            
            #line default
            #line hidden
            
            #line 373 ""
            this.Write(@""">
                                        <img src=""images/education-nationale.svg"" style=""width: 24px; height: 24px; align-self: center;"">
                                        <div style=""flex-grow: 1; margin-left: 10px; text-align: center; align-self: center;"">Éducation Nationale Profs/Agents</div>
                                    </a>
                                    <a class=""btn"" style=""margin-top: 40px; padding: 6px; padding-left: 10px; background-color: #000000; display: flex; flex-direction: row;"" href=""cutIdp?service=");
            
            #line default
            #line hidden
            
            #line 377 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( HttpUtility.UrlEncode(service) ));
            
            #line default
            #line hidden
            
            #line 377 ""
            this.Write("&state=");
            
            #line default
            #line hidden
            
            #line 377 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( HttpUtility.UrlEncode(state) ));
            
            #line default
            #line hidden
            
            #line 377 ""
            this.Write(@""">
                                        <img src=""images/grandlyon-connect.svg"" style=""width: 24px; height: 24px; align-self: center;"">
                                        <div style=""flex-grow: 1; margin-left: 10px; text-align: center; align-self: center;"">GrandLyon Connect</div>
                                    </a>
    							</div>
                                <div style=""position: relative; min-width: 80px; min-height: 80px;"">
                                    <div class=""authSeparator""></div>
                                    <span class=""authOr"">&nbsp;ou&nbsp;</span>
                                </div>

    							<div style=""margin-bottom: 0px; flex: 1;"">
    								<div class=""title"">avec votre compte Laclasse.com :</div>
    								<form method=""post"" action=""login"">
    			            			<input type=""hidden"" name=""service"" value=""");
            
            #line default
            #line hidden
            
            #line 390 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( Web.HttpUtility.HtmlEncode(service) ));
            
            #line default
            #line hidden
            
            #line 390 ""
            this.Write("\">\n    \t\t\t            \t\t\t<input type=\"hidden\" name=\"state\" value=\"");
            
            #line default
            #line hidden
            
            #line 391 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( state ));
            
            #line default
            #line hidden
            
            #line 391 ""
            this.Write("\">\n    \t\t\t            \t\t\t<input type=\"hidden\" name=\"ticket\" value=\"");
            
            #line default
            #line hidden
            
            #line 392 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( ticket ));
            
            #line default
            #line hidden
            
            #line 392 ""
            this.Write("\">\n    \t\t\t\t\t\t\t\t\t<div>Identifiant:</div>\n    \t\t\t\t\t\t\t\t\t<input name=\"username\" type=" +
                    "\"text\" style=\"margin-bottom: 10px;\">\n    \t\t\t\t\t\t\t\t\t<div>Mot de passe:</div>\n    \t" +
                    "\t\t\t\t\t\t\t\t<input name=\"password\" type=\"password\" style=\"margin-bottom: 10px;\">\n   " +
                    " \t\t\t\t\t\t\t\t\t<label class=\"checkbox\"><input type=\"checkbox\" name=\"keepconnected\" va" +
                    "lue=\"true\"><div style=\"position: relative; display: inline-block; width: 20px; h" +
                    "eight: 20px; bottom: -4px; margin-right: 5px;\">\n                                " +
                    "          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" vie" +
                    "wBox=\"0 0 48 48\" style=\"position: absolute; left: 0px; right: 0px; top: 0px; bot" +
                    "tom: 0px;\">\n                                            <path d=\"M0 0h48v48h-48z" +
                    "\" fill=\"none\"/>\n                                            <path d=\"M18 32.34l-" +
                    "8.34-8.34-2.83 2.83 11.17 11.17 24-24-2.83-2.83z\"/>\n                            " +
                    "              </svg>\n                                        </div> rester conne" +
                    "cté</label>\n                                        <br><br>\n    \t\t\t\t\t\t\t\t\t<input" +
                    " class=\"btn\" style=\"display: block; width: calc(100% - 10px);\" name=\"submit\" typ" +
                    "e=\"submit\" value=\"SE CONNECTER\">\n    \t\t\t\t\t\t\t\t</form>\n                           " +
                    "         <div style=\"display: flex; flex-wrap: wrap; flex-direction: row; margin" +
                    "-top: 20px;\">\n                                        <a href=\"#\" onclick=\"onRes" +
                    "cue()\">Mot de passe oublié ?</a>\n                                        <a styl" +
                    "e=\"flex-grow: 1; text-align: right;\" href=\"#\" onclick=\"onContact()\">Contact</a>\n" +
                    "                                    </div>\n                                </div" +
                    ">\n                            </div>\n\t\t\t\t\t\t</div>\n\n\t   \t\t\t\t\t<!-- lost password -" +
                    "->\n\t\t\t\t\t\t<div style=\"display: none\" id=\"rescue-content\">\n\t\t\t\t\t\t\t<div class=\"boxH" +
                    "eader\">\n\t\t\t\t\t\t\t\t<a href=\"#back\" onclick=\"onRescueBack()\" style=\"float: left;\">\n\t" +
                    "\t\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" viewBox=\"" +
                    "0 0 48 48\">\n\t\t\t\t\t\t\t\t\t\t<path style=\"fill:#444444;fill-opacity:1;stroke:none\" d=\"M" +
                    "40 22H15.86l11.18-11.18L24 8l-16 16 16 16 2.82-2.82L15.66 26H40v-4z\"/>\n\t\t\t\t\t\t\t\t\t" +
                    "</svg>\n\t\t\t\t\t\t\t\t</a> Mot de passe oublié\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div style=\"margin" +
                    "-bottom: 20px;\">\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\tMerci de renseigner une adresse email (a" +
                    "utre que celle de l\'ENT) ou un numéro de\n\t\t\t\t\t\t\t\t\ttéléphone portable: les vôtres" +
                    " ou ceux d\'un de vos parents.<br>\n\t\t\t\t\t\t\t\t\t<br>\n\t\t\t\t\t\t\t\t\tPar exemple:\n\t\t\t\t\t\t\t\t\t<" +
                    "ul>\n\t\t\t\t\t\t\t\t\t\t<li>pour un compte enseignant, votre adresse email académique.\n\t\t\t" +
                    "\t\t\t\t\t\t\t<li>pour un élève, l\'adresse email de votre mère.\n\t\t\t\t\t\t\t\t\t\t<li>pour un p" +
                    "arent, votre numéro de téléphone portable que vous avez communiqué lors de l\'ins" +
                    "cription\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<form method=\"post\" action=\"login" +
                    "\">\n\t\t    \t        \t\t\t<input type=\"hidden\" name=\"service\" value=\"");
            
            #line default
            #line hidden
            
            #line 437 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( Web.HttpUtility.HtmlEncode(service) ));
            
            #line default
            #line hidden
            
            #line 437 ""
            this.Write("\">\n\t\t    \t        \t\t\t<input type=\"hidden\" name=\"state\" value=\"");
            
            #line default
            #line hidden
            
            #line 438 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( state ));
            
            #line default
            #line hidden
            
            #line 438 ""
            this.Write("\">\n\t\t    \t        \t\t\t<input type=\"hidden\" name=\"ticket\" value=\"");
            
            #line default
            #line hidden
            
            #line 439 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( ticket ));
            
            #line default
            #line hidden
            
            #line 439 ""
            this.Write(@""">
		    	        			<div>Email ou Tel:</div>
									<input name=""rescue"" type=""text"" style=""margin-bottom: 10px;"">
									<br><br>
									<input style=""width: calc(100% - 10px);"" class=""btn"" name=""submit"" type=""submit"" value=""RÉCUPÉRER"">
								</form>
							</div>
						</div>

						<!-- contact -->
						<div style=""display: none"" id=""contact-content"">
							<div class=""boxHeader"">
								<a href=""#back"" onclick=""onContactBack()"" style=""float: left;"">
									<svg xmlns=""http://www.w3.org/2000/svg"" width=""28"" height=""28"" viewBox=""0 0 48 48"">
										<path style=""fill:#444444;fill-opacity:1;stroke:none"" d=""M40 22H15.86l11.18-11.18L24 8l-16 16 16 16 2.82-2.82L15.66 26H40v-4z""/>
									</svg>
								</a> Besoin d'aide ?
							</div>

							<div style=""margin-bottom: 20px;"">
								<div>
									<ul style=""text-align:left"">
										<li>
											<a href=""http://ent-laclasse.blogs.laclasse.com"">Consulter le blog de l'ENT</a>
										</li>
										<li>
											si vous êtes parent, élève ou personnel contactez votre administrateur d'établissement
										</li>
										<li>
											si vous êtes administrateur d'établissement:
											<ul>
												<li><a href=""mailto:contact-informatique@grandlyon.com"">contact-informatique@grandlyon.com</a></li>
												<li><a href=""tel:+33478634356"">04.78.63.43.56</a></li>
											</ul>
										</li>
									</ul>
								</div>
							</div>
						</div>
						");
            
            #line default
            #line hidden
            
            #line 478 ""
 } 
            
            #line default
            #line hidden
            
            #line 479 ""
            this.Write(@"					</div>
					<div class=""footer"">
                        <div style=""position: absolute; height: 60px; width: 60px; border-radius: 30px; display: block; left: 20px; top: -30px; padding: 0px;""><img src=""images/laclasse-grey.svg"" style=""width: 60px; height: 60px;""></div>
                        <a href=""/portail/#Accueil"" style=""padding: 5px; padding-left: 90px; font-weight: bold; color: #444; text-transform: uppercase; display: block; border-bottom-left-radius: 10px; border-bottom-right-radius: 10px;"">En savoir plus sur laclasse.com</a>
					</div>
				</div>
			</center>
		</div>
	</body>
</html>");
            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
        
        public virtual void Initialize() {
        }
    }
    
    public class CasViewBase {
        
        private global::System.Text.StringBuilder builder;
        
        private global::System.Collections.Generic.IDictionary<string, object> session;
        
        private global::System.CodeDom.Compiler.CompilerErrorCollection errors;
        
        private string currentIndent = string.Empty;
        
        private global::System.Collections.Generic.Stack<int> indents;
        
        private ToStringInstanceHelper _toStringHelper = new ToStringInstanceHelper();
        
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session {
            get {
                return this.session;
            }
            set {
                this.session = value;
            }
        }
        
        public global::System.Text.StringBuilder GenerationEnvironment {
            get {
                if ((this.builder == null)) {
                    this.builder = new global::System.Text.StringBuilder();
                }
                return this.builder;
            }
            set {
                this.builder = value;
            }
        }
        
        protected global::System.CodeDom.Compiler.CompilerErrorCollection Errors {
            get {
                if ((this.errors == null)) {
                    this.errors = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errors;
            }
        }
        
        public string CurrentIndent {
            get {
                return this.currentIndent;
            }
        }
        
        private global::System.Collections.Generic.Stack<int> Indents {
            get {
                if ((this.indents == null)) {
                    this.indents = new global::System.Collections.Generic.Stack<int>();
                }
                return this.indents;
            }
        }
        
        public ToStringInstanceHelper ToStringHelper {
            get {
                return this._toStringHelper;
            }
        }
        
        public void Error(string message) {
            this.Errors.Add(new global::System.CodeDom.Compiler.CompilerError(null, -1, -1, null, message));
        }
        
        public void Warning(string message) {
            global::System.CodeDom.Compiler.CompilerError val = new global::System.CodeDom.Compiler.CompilerError(null, -1, -1, null, message);
            val.IsWarning = true;
            this.Errors.Add(val);
        }
        
        public string PopIndent() {
            if ((this.Indents.Count == 0)) {
                return string.Empty;
            }
            int lastPos = (this.currentIndent.Length - this.Indents.Pop());
            string last = this.currentIndent.Substring(lastPos);
            this.currentIndent = this.currentIndent.Substring(0, lastPos);
            return last;
        }
        
        public void PushIndent(string indent) {
            this.Indents.Push(indent.Length);
            this.currentIndent = (this.currentIndent + indent);
        }
        
        public void ClearIndent() {
            this.currentIndent = string.Empty;
            this.Indents.Clear();
        }
        
        public void Write(string textToAppend) {
            this.GenerationEnvironment.Append(textToAppend);
        }
        
        public void Write(string format, params object[] args) {
            this.GenerationEnvironment.AppendFormat(format, args);
        }
        
        public void WriteLine(string textToAppend) {
            this.GenerationEnvironment.Append(this.currentIndent);
            this.GenerationEnvironment.AppendLine(textToAppend);
        }
        
        public void WriteLine(string format, params object[] args) {
            this.GenerationEnvironment.Append(this.currentIndent);
            this.GenerationEnvironment.AppendFormat(format, args);
            this.GenerationEnvironment.AppendLine();
        }
        
        public class ToStringInstanceHelper {
            
            private global::System.IFormatProvider formatProvider = global::System.Globalization.CultureInfo.InvariantCulture;
            
            public global::System.IFormatProvider FormatProvider {
                get {
                    return this.formatProvider;
                }
                set {
                    if ((value != null)) {
                        this.formatProvider = value;
                    }
                }
            }
            
            public string ToStringWithCulture(object objectToConvert) {
                if ((objectToConvert == null)) {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                global::System.Type type = objectToConvert.GetType();
                global::System.Type iConvertibleType = typeof(global::System.IConvertible);
                if (iConvertibleType.IsAssignableFrom(type)) {
                    return ((global::System.IConvertible)(objectToConvert)).ToString(this.formatProvider);
                }
                global::System.Reflection.MethodInfo methInfo = type.GetMethod("ToString", new global::System.Type[] {
                            iConvertibleType});
                if ((methInfo != null)) {
                    return ((string)(methInfo.Invoke(objectToConvert, new object[] {
                                this.formatProvider})));
                }
                return objectToConvert.ToString();
            }
        }
    }
}
